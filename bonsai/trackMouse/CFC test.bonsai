<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.4.1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:p1="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:FileCapture">
          <cv:FileName>cfc.mp4</cv:FileName>
          <cv:PlaybackRate>200</cv:PlaybackRate>
          <cv:StartPosition>0</cv:StartPosition>
          <cv:PositionUnits>Frames</cv:PositionUnits>
          <cv:Loop>true</cv:Loop>
          <cv:Playing>true</cv:Playing>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:Crop">
          <cv:RegionOfInterest>
            <cv:X>240</cv:X>
            <cv:Y>192</cv:Y>
            <cv:Width>816</cv:Width>
            <cv:Height>823</cv:Height>
          </cv:RegionOfInterest>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:Grayscale" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:Threshold">
          <cv:ThresholdValue>40</cv:ThresholdValue>
          <cv:MaxValue>255</cv:MaxValue>
          <cv:ThresholdType>BinaryInv</cv:ThresholdType>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:FindContours">
          <cv:Mode>External</cv:Mode>
          <cv:Method>ChainApproxNone</cv:Method>
          <cv:Offset>
            <cv:X>0</cv:X>
            <cv:Y>0</cv:Y>
          </cv:Offset>
          <cv:MinArea>1000</cv:MinArea>
          <cv:MaxArea>1000000</cv:MaxArea>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:BinaryRegionAnalysis" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:LargestBinaryRegion" />
      </Expression>
      <Expression xsi:type="Condition">
        <Description>MouseDetected</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Area</Selector>
            </Expression>
            <Expression xsi:type="GreaterThan">
              <Operand xsi:type="DoubleProperty">
                <Value>0</Value>
              </Operand>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Centroid</Selector>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>X</Selector>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Y</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Skip">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Zip" />
      </Expression>
      <Expression xsi:type="p1:PythonTransform">
        <p1:Name>Body Velocity</p1:Name>
        <p1:Script>import math 

@returns(float)
def process(value):
  dx = value.Item1.X-value.Item2.X
  dy = value.Item1.Y-value.Item2.Y
  return math.hypot(dx, dy)</p1:Script>
      </Expression>
      <Expression xsi:type="io:CsvWriter">
        <io:FileName>123.csv</io:FileName>
        <io:Append>false</io:Append>
        <io:Overwrite>false</io:Overwrite>
        <io:Suffix>Timestamp</io:Suffix>
        <io:IncludeHeader>true</io:IncludeHeader>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="8" To="10" Label="Source1" />
      <Edge From="8" To="11" Label="Source1" />
      <Edge From="8" To="12" Label="Source1" />
      <Edge From="8" To="14" Label="Source1" />
      <Edge From="11" To="12" Label="Source2" />
      <Edge From="12" To="13" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>